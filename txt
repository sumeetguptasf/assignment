
 id |  client_id  |  client_secret  |       redirect_url        | access_token_expiration | refresh_token_expiration | auth_code_expiration |   secret    |          created_on           |          modified_on          | deleted | deleted_on | deleted_by | created_by | modified_by | client_type 
----+-------------+-----------------+---------------------------+-------------------------+--------------------------+----------------------+-------------+-------------------------------+-------------------------------+---------+------------+------------+------------+-------------+-------------
  1 | test-client | test-secret-123 | http://localhost/callback |                     900 |                    86400 |                  180 | hash-method | 2025-08-12 12:02:15.567965+00 | 2025-08-12 12:02:15.567965+00 | f       |            |            |            |             | public

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Move the tables from main to public schema :
 DO $$
DECLARE
    tbl RECORD;
BEGIN
    FOR tbl IN
        SELECT tablename
        FROM pg_tables
        WHERE schemaname = 'main'
    LOOP
        EXECUTE format('ALTER TABLE main.%I SET SCHEMA public;', tbl.tablename);
    END LOOP;
END$$;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
INSERT INTO jwt_keys (key_id, public_key, private_key, created_on)
VALUES (
  'my-key-1',
  $$-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8xhpLBbUpyecfoKiH3QW
aOYk9phW+UnE9NpBg2ty1fzO87770hOumDMBhe16jKl+UIdVYGGwH2R4+gOZI0Cq
p74pxNr8QsO+Lj8TeRNQfUOF7TxaHkuZZsyq5vcwssX+6G1SlxrrJNMTzRTccpDz
LsBr8n685DSpjFxjCVVoUk5Jd3DVOHd/7kuqDfzTvcwKAes7Hfamxe9A1lDILbeW
gMUHzBvLSdx5QDpdOfi3v8YI+4Gw4x29rmPr7jDe5rPa1rNUua3zKCjxoCH69zCN
iADIgM4JwaQ+cpuYUaaPk8JvSjZw6UCgH0vrpAWi5BB12P01w1Vmo/5mGvbXiJgi
iQIDAQAB
-----END PUBLIC KEY-----$$,
  $$-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDzGGksFtSnJ5x+
gqIfdBZo5iT2mFb5ScT02kGDa3LV/M7zvvvSE66YMwGF7XqMqX5Qh1VgYbAfZHj6
A5kjQKqnvinE2vxCw74uPxN5E1B9Q4XtPFoeS5lmzKrm9zCyxf7obVKXGusk0xPN
FNxykPMuwGvyfrzkNKmMXGMJVWhSTkl3cNU4d3/uS6oN/NO9zAoB6zsd9qbF70DW
UMgtt5aAxQfMG8tJ3HlAOl05+Le/xgj7gbDjHb2uY+vuMN7ms9rWs1S5rfMoKPGg
Ifr3MI2IAMiAzgnBpD5ym5hRpo+Twm9KNnDpQKAfS+ukBaLkEHXY/TXDVWaj/mYa
9teImCKJAgMBAAECggEAIHXngVQmdDrwBN1OZxMkykAaZR/wKTHmY2hg1tAlEZmZ
oZGkkFJBfkr9TpQTSQTO/FN98onzhIBG6Tehc27MpZaD1FNbhlIbVeiP90W9eeSS
Kxy5JJIlZe/kIvA/Z/fUCIGkms8k4WdwHZ1GAeRaHKmOyzQ3kTojqRL4by7LkzBk
s8pRNngv6/C5CK86S50NolBPrszY6NCbtHobo9H+O+PPCnEn2kDA6pHP4zG93t+e
lUsbhDsQAwi5PhYjkX17xs1pJz60PQG9K3CrQwR17OpuvUAj3fdyfhDU/36OI1kv
7TJPkT1o/nh7rNrNOjrp84PwbTCwTaEKNGA+g7L3WwKBgQD6GRoO37yIJ8VsqUVc
+R5V5lnMpqvsrtxuwvc+DqrW0dDMAsNyIZiGUW1jNQ973D1F+AH/JOQVH40TNswY
LgH9PxIUglr3YPtzxK+osZjWLtQI8FLKzjRKoQ8+USBdAJ3vjipu70QNPIl493i2
FKmQws3plZ1KR2KecphVF3CHHwKBgQD41QERTLXOz/WN1TKNa3hm2pBpoY1dUsdj
+n/uVdKWPCh/GcLrQWpMxRLyX8hROIZiPxoBfzxd9FnR4a2FCM7jAqq5rkbiBi4b
DJUFAjJIQgUnhSn42ic/4ufKW+yl9k5x5/L2z17D43FbywD4Yj6D5ROe7qaUGwDB
2Tf9uMHpVwKBgQC1XKCl6p+ISPcEzldrjYfvGOVD4BXKxB87/wxWJ0LCF1MHrnVW
/X/i34eoqqC43EReyfOAt5riqoeeSF2Gp05v/F27G7ClteGC2T3c4jUIFNtURBp1
0UTgXZ11PlVuu/TL9FdXLRE3XBAA9czGlYNFY874tbNjWxLr/gPzqNTEVwKBgDtv
dW/SaOLbXYXhVM/eycWXk0MH6aJO8X16CjC9oy1rdSjW2G4lE+T+dcYbBtgPrlmt
ROLyp1Kx2Pp+81mBfxlOO8VaUWgPndesK7QkkCoeSujjr+DXCuUBp+f4CRCjQp2G
j8xQQAx+OUd5t+OcY95RS1x9GKDrykSDRBKAnSDFAoGBANI+dmNDvRgeksXT1LFE
eoq6kyQ4DUPf5Id8LQENkNWQepxU9uh+zmIRlWsYVIjUWKuv5gNvyuAKNhxxsH18
Brb/Z2o94Wfu50DvLjqPXNNveqdc/eXjQCjAJN/s8cbfcX5F1sPq+O92e8Lrl101
NIz4kdM5AwwvxI9aR3YBDJXM
-----END PRIVATE KEY-----$$
,
  NOW()
);


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

auth-service : 
authentication-service : 
chat-service : 
notification-service : 
order-service : 
product-service :
user-service : 
uts-user-service :


-----------

User Service : 
Request : /users/signup
Method: POST
Body:
{
  "username": "sumeet14gupta",
  "firstName": "Sumeet",
  "middleName": "",
  "lastName": "Gupta",
  "email": "sumeet14gupta@example.com",
  "phone": "+91-XXXXXXXXXX",
  "address": "New Delhi, India",
  "role": "SuperAdmin",
  "password": "password"
}
{
  "id": "ce848c5d-e6bc-4c56-8a4a-056cba4c53d2",
  "username": "sumeetg",
  "firstName": "Sumeet",
  "middleName": "Kumar",
  "lastName": "Gupta",
  "email": "sumeetkumargupta@gmail.com",
  "phone": "7985220470",
  "address": "48 jk l",
  "role": "SuperAdmin",
  "created_at": "2025-08-13T19:22:48.794Z"
}
Response:
{
  "id": "7b208acb-be9e-4ec6-ab29-8b6b1e34c3fe",
  "username": "sumeet14gupta",
  "firstName": "Sumeet",
  "middleName": "",
  "lastName": "Gupta",
  "email": "sumeet14gupta@example.com",
  "phone": "+91-XXXXXXXXXX",
  "address": "New Delhi, India",
  "role": "SuperAdmin",
  "created_at": "2025-08-13T08:29:31.521Z"
}
for email : sumeetkumargupta@gmail.com. | valid : 1 day
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNlODQ4YzVkLWU2YmMtNGM1Ni04YTRhLTA1NmNiYTRjNTNkMiIsImVtYWlsIjoic3VtZWV0a3VtYXJndXB0YUBnbWFpbC5jb20iLCJpYXQiOjE3NTUxMTgxMzQsImV4cCI6MTc1NTIwNDUzNH0.cd_9QBzEjskhBLGCluDy0ecq1eO7t1vHX_uI5m72mOM"
}

------------------------
Auth flow across services:

	1.	User logs in → login() issues JWT signed with process.env.JWT_SECRET.
	2.	Client sends token to any service.
	3.	That service calls jwt.verify(token, process.env.JWT_SECRET) internally.
	4.	If valid, request is authenticated — without calling user-service.

// DESIGN

1. the product service is not directly accessible , so only facade service will call all the required product apis ,
authorization can effectively be implemented only in facade service.