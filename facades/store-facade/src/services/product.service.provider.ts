import { inject, Provider } from '@loopback/core';
import { ProductServiceDataSource } from '../datasources';
import { Product } from '../models/product.model';

export interface ProductService {
  getAllProducts(): Promise<Product[]>;
  getProductById(id: string): Promise<Product | null>;
  createProduct(product: Product): Promise<Product>;
  updateProduct(id: string, product: Product): Promise<Product | null>;
  deleteProduct(id: string): Promise<boolean>;
}
export class ProductServiceProvider implements Provider<ProductService> {
  constructor(
    @inject('datasources.productService')
    protected dataSource: ProductServiceDataSource = new ProductServiceDataSource(),
  ) {}

  value(): ProductService {
    // `this.dataSource.DataSourceName` is automatically generated by LoopBack's service-proxy
    return (this.dataSource as any);
  }
}